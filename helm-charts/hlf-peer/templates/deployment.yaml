apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hlf-peer.fullname" . }}
  labels:
{{ include "labels.standard" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "hlf-peer.name" . }}
      release: {{ .Release.Name }}
  # Ensure we allow our pod to be unavailable, so we can upgrade
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
{{ include "labels.standard" . | indent 8 }}
    spec:
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "hlf-peer.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: dockersocket
          hostPath:
            path: /var/run/docker.sock
        {{- if .Values.secrets.peer.orgpeeradmincert }}
        - name: orgpeeradmincert
          secret:
            secretName: {{ .Values.secrets.peer.orgpeeradmincert }}
        {{- end }}
        {{- if .Values.secrets.peer.orgpeercacert }}
        - name: orgpeercacert
          secret:
            secretName: {{ .Values.secrets.peer.orgpeercacert }}
        {{- end }}
        {{- if .Values.secrets.peer.orgpeerkeystore }}
        - name: orgpeerkeystore
          secret:
            secretName: {{ .Values.secrets.peer.orgpeerkeystore }}
        {{- end }}
        {{- if .Values.secrets.peer.orgpeersigncert }}
        - name: orgpeersigncert
          secret:
            secretName: {{ .Values.secrets.peer.orgpeersigncert }}
        {{- end }}
        {{- if .Values.secrets.peer.orgadminadmincert }}
        - name: orgadminadmincert
          secret:
            secretName: {{ .Values.secrets.peer.orgadminadmincert }}
        {{- end }}
        {{- if .Values.secrets.peer.orgadmincacert }}
        - name: orgadmincacert
          secret:
            secretName: {{ .Values.secrets.peer.orgadmincacert }}
        {{- end }}
        {{- if .Values.secrets.peer.orgadminkeystore }}
        - name: orgadminkeystore
          secret:
            secretName: {{ .Values.secrets.peer.orgadminkeystore }}
        {{- end }}
        {{- if .Values.secrets.peer.orgadminsigncert }}
        - name: orgadminsigncert
          secret:
            secretName: {{ .Values.secrets.peer.orgadminsigncert }}
        {{- end }}
        {{- if .Values.secrets.channel }}
        - name: channel
          secret:
            secretName: {{ .Values.secrets.channel }}
        {{- end }}

      containers:
        - name: peer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: request
              containerPort: 7051
              protocol: TCP
            - name: event
              containerPort: 7053
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - ls
              - /var/hyperledger
            initialDelaySeconds: 5
            periodSeconds: 5
          # TODO: Improve readiness probe (ideally `ps aux | awk '$11=="orderer"'`)
          readinessProbe:
            exec:
              command:
              - ls
              - /var/hyperledger
            initialDelaySeconds: 15
          command:
            - bash
            - -c
            - |
              # To avoid having separate secrets for CouchDB and HLF
              export CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=$COUCHDB_USER
              export CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=$COUCHDB_PASSWORD

              while [ ! -d /var/hyperledger/admin_msp/admincerts ] || [ -z "$(ls -A /var/hyperledger/admin_msp/admincerts)" ];
              do
                echo "\033[0;31m /var/hyperledger/admin_msp/admincerts must contain Peer admin certificates files \033[0m"
                sleep 60
              done

              while [ ! -d ${CORE_PEER_MSPCONFIGPATH}/signcerts ];
              do
                echo "\033[0;31m ${CORE_PEER_MSPCONFIGPATH}/signcerts directory must exist \033[0m"
                sleep 60
              done

              if [ ! -d ${FABRIC_CFG_PATH} ]
              then
                mkdir -p ${FABRIC_CFG_PATH}
                cp -r /etc/hyperledger/fabric/core.yaml ${FABRIC_CFG_PATH}
                ls ${FABRIC_CFG_PATH}
              fi

              if [ $CORE_PEER_TLS_CLIENTAUTHREQUIRED ]
              then
                export CORE_PEER_TLS_CLIENTROOTCAS_FILES=$(ls -d $CORE_PEER_TLS_CLIENTROOTCAS_FILES)
              fi

              echo ">\033[0;35m peer node start \033[0m"
              peer node start
          envFrom:
            {{- if eq .Values.peer.databaseType "CouchDB" }}
            - secretRef:
                name: {{ .Values.peer.couchdbInstance }}-hlf-couchdb
            {{- end }}
            - configMapRef:
                name: {{ include "hlf-peer.fullname" . }}--peer
          volumeMounts:
            - mountPath: /var/hyperledger
              name: data
            - mountPath: /host/var/run/docker.sock
              name: dockersocket
            {{- if .Values.secrets.peer.orgpeeradmincert }}
            - mountPath: /var/hyperledger/msp/admincerts
              name: orgpeeradmincert
            {{- end }}
            {{- if .Values.secrets.peer.orgpeercacert }}
            - mountPath: /var/hyperledger/msp/cacerts
              name: orgpeercacert
            {{- end }}
            {{- if .Values.secrets.peer.orgpeerkeystore }}
            - mountPath: /var/hyperledger/msp/keystore
              name: orgpeerkeystore

            {{- end }}
            {{- if .Values.secrets.peer.orgpeersigncert }}
            - mountPath: /var/hyperledger/msp/signcerts
              name: orgpeersigncert

            {{- end }}
            {{- if .Values.secrets.peer.orgadminadmincert }}
            - mountPath: /var/hyperledger/admin_msp/admincerts
              name: orgadminadmincert
            {{- end }}
            {{- if .Values.secrets.peer.orgadmincacert }}
            - mountPath: /var/hyperledger/admin_msp/cacerts
              name: orgadmincacert
            {{- end }}
            {{- if .Values.secrets.peer.orgadminkeystore }}
            - mountPath: /var/hyperledger/admin_msp/keystore
              name: orgadminkeystore
            {{- end }}
            {{- if .Values.secrets.peer.orgadminsigncert }}
            - mountPath: /var/hyperledger/admin_msp/signcerts
              name: orgadminsigncert
            {{- end }}

            {{- if .Values.secrets.channel }}
            - mountPath: /hl_config/channel
              name: channel
            {{- end }}

          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        ## This affinity is required to ensure reasonable ledger access speeds
        {{- if eq $.Values.peer.databaseType "CouchDB" }}
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: release
                operator: In
                values:
                - {{ $.Values.peer.couchdbInstance }}
            topologyKey: "kubernetes.io/hostname"
        {{- end }}
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
